{"version":3,"file":"static/js/277.85a2453f.chunk.js","mappings":"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","sources":["components/PizzaItem/PizzaItem.jsx","components/Sceleton/Skeleton.jsx","redux/selectors.js","components/Categories/Categories.jsx","components/Sort/Sort.jsx","components/PizzaList/PizzaList.jsx","pages/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nconst typeNames = ['традициіне', 'тонке'];\n\nconst PizzaItem = ({ item }) => {\n  const { imageUrl, title, types, sizes, price, ingredients } = item;\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(26);\n  const [infoVisible, setInfoVisible] = useState(false);\n\n  const handleInfoVisible = () => setInfoVisible(prev => !prev);\n\n  const handleActiveType = el => setActiveType(el);\n  const handleActiveSize = idx => setActiveSize(idx);\n  const handleFullPrice = () => {\n    if (activeSize === 30) {\n      return `${Math.round(price * 1.2)} ₴`;\n    } else if (activeSize === 40) {\n      return `${Math.round(price * 1.35)} ₴`;\n    } else {\n      return `${price} ₴`;\n    }\n  };\n\n  return (\n    <div className=\"pizza-block-wrapper\">\n      <li className=\"pizza-block\">\n        <div className=\"pizza-block__image-wrapper\">\n          <LazyLoadImage\n            className=\"pizza-block__image\"\n            src={imageUrl}\n            width={260}\n            height={260}\n            effect=\"blur\"\n            alt=\"Pizza\"\n          />\n\n          <button\n            onClick={handleInfoVisible}\n            className=\"pizza-block__info\"\n            type=\"button\"\n          >\n            i\n          </button>\n\n          {infoVisible && (\n            <div className=\"pizza-block__overlay\">\n              <p className=\"pizza-block__overlay-desc\">Склад: {ingredients}</p>\n            </div>\n          )}\n        </div>\n\n        <h4 className=\"pizza-block__title\">{title}</h4>\n        <div className=\"pizza-block__selector\">\n          <ul>\n            {types.map(el => (\n              <li\n                key={el}\n                onClick={() => handleActiveType(el)}\n                className={activeType === el ? 'active' : ''}\n              >\n                {typeNames[el]}\n              </li>\n            ))}\n          </ul>\n          <ul>\n            {sizes.map(el => (\n              <li\n                key={el}\n                onClick={() => handleActiveSize(el)}\n                className={activeSize === el ? 'active' : ''}\n              >\n                {el} см\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"pizza-block__bottom\">\n          <div className=\"pizza-block__price\">{handleFullPrice()}</div>\n          <button className=\"button button--outline button--add\">\n            <svg\n              width=\"12\"\n              height=\"12\"\n              viewBox=\"0 0 12 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                fill=\"white\"\n              />\n            </svg>\n            <span>Додати</span>\n            <i>0</i>\n          </button>\n        </div>\n      </li>\n    </div>\n  );\n};\n\nexport default PizzaItem;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\n const Skeleton = () => (\n  <ContentLoader\n    className=\"pizza-block\"\n    speed={2}\n    width={280}\n    height={500}\n    viewBox=\"0 0 280 500\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n  >\n    <circle cx=\"134\" cy=\"136\" r=\"125\" />\n    <rect x=\"0\" y=\"279\" rx=\"10\" ry=\"10\" width=\"280\" height=\"23\" />\n    <rect x=\"0\" y=\"326\" rx=\"10\" ry=\"10\" width=\"280\" height=\"88\" />\n    <rect x=\"0\" y=\"436\" rx=\"10\" ry=\"10\" width=\"95\" height=\"30\" />\n    <rect x=\"125\" y=\"427\" rx=\"24\" ry=\"24\" width=\"152\" height=\"45\" />\n  </ContentLoader>\n);\n\nexport default Skeleton","export const selectCategoryId = state => state.filter.categoryId;\n\nexport const selectSortType = state => state.filter.sort;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCategoryId } from 'redux/selectors';\nimport { setGategoryId } from 'redux/slices/filterSlice';\n\nconst categories = ['Усі', \"М'ясні\", \"Без м'яса\", 'Гриль', 'Гострі'];\n\nconst Categories = () => {\n  const dispatch = useDispatch();\n  const categoryId = useSelector(selectCategoryId);\n\n  const handleCategory = id => dispatch(setGategoryId(id));\n  return (\n    <div className=\"categories\">\n      <ul>\n        {categories.map((el, idx) => (\n          <li\n            key={idx}\n            onClick={() => handleCategory(idx)}\n            className={categoryId === idx ? 'active' : ''}\n          >\n            {el}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSortVariant } from 'redux/slices/filterSlice';\nimport { selectSortType } from 'redux/selectors';\n\nconst sortVariant = [\n  { name: 'популярності', value: 'rating' },\n  { name: 'ціні ⬇', value: '-price' },\n  { name: 'ціні ⬆', value: 'price' },\n  { name: 'алфавіту', value: 'title' },\n];\n\nconst Sort = () => {\n  const dispatch = useDispatch();\n  const selectedSortVariant = useSelector(selectSortType);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleSortVariant = value => dispatch(setSortVariant(value));\n  const toggleVisible = () => setIsVisible(prev => !prev);\n\n  const handleActiveVariant = idx => {\n    handleSortVariant(idx);\n    setIsVisible(prev => !prev);\n  };\n\n  return (\n    <div className=\"sort\">\n      <div className=\"sort__label\">\n        <svg\n          className={isVisible ? 'sort__svg--active' : 'sort__svg'}\n          width=\"10\"\n          height=\"6\"\n          viewBox=\"0 0 10 6\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n            fill=\"#2C2C2C\"\n          />\n        </svg>\n        <b>Сортувати по:</b>\n        <span onClick={toggleVisible}>{selectedSortVariant.name}</span>\n      </div>\n      {isVisible && (\n        <div className=\"sort__popup\">\n          <ul>\n            {sortVariant.map((el, idx) => (\n              <li\n                key={idx}\n                onClick={() => handleActiveVariant(el)}\n                className={selectedSortVariant.name === el.name ? 'active' : ''}\n              >\n                {el.name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Sort;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PizzaItem from '../PizzaItem';\nimport Skeleton from '../Sceleton';\nimport Categories from '../Categories';\nimport Sort from '../Sort';\nimport { SearchValue } from 'components/App';\nimport { useSelector } from 'react-redux';\nimport { selectCategoryId, selectSortType } from 'redux/selectors';\n\nconst categories = ['Усі', \"М'ясні\", \"Без м'яса\", 'Гриль', 'Гострі'];\n\nconst PizzaList = () => {\n  const categoryId = useSelector(selectCategoryId);\n  const selectedSortVariant = useSelector(selectSortType);\n\n  const { searchQuery } = useContext(SearchValue);\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const order = selectedSortVariant.value.includes('-') ? 'desc' : 'asc';\n    const sort = `sortBy=${selectedSortVariant.value.replace(\n      '-',\n      ''\n    )}&order=${order}`;\n    setIsLoading(true);\n    fetch(\n      `https://644fc5e0ba9f39c6ab6c0206.mockapi.io/items?${category}&${sort}`\n    )\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n        setData(res);\n        setIsLoading(false);\n      })\n      .catch(e => {\n        throw new Error(e);\n      });\n    window.scroll(0, 0);\n  }, [categoryId, selectedSortVariant]);\n\n  const normalizeValue = searchQuery.toLowerCase();\n  const skeleton = [...new Array(6)].map((_, idx) => <Skeleton key={idx} />);\n  const pizzas = data\n    .filter(item => item.title.toLowerCase().includes(normalizeValue))\n    .map(item => <PizzaItem key={item.id} item={item} />);\n  const pizzaLength = pizzas.length;\n  const vegPizzas = `Піци ${categories[categoryId].toLocaleLowerCase()}`;\n\n  return (\n    <>\n      <div className=\"content__top\">\n        <Categories />\n        <Sort />\n      </div>\n      <h2 className=\"content__title\">\n        {categoryId === 2 ? vegPizzas : `${categories[categoryId]} піци`}\n      </h2>\n      <ul className=\"content__items\">{isLoading ? skeleton : pizzas}</ul>\n\n      {pizzaLength === 0 && (\n        <h1>Sorry, but there are no results for your query</h1>\n      )}\n    </>\n  );\n};\n\nexport default PizzaList;\n","import React from 'react';\nimport PizzaList from 'components/PizzaList';\n\nconst Home = () => {\n  return (\n    <>\n      <PizzaList />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["typeNames","item","imageUrl","title","types","sizes","price","ingredients","useState","activeType","setActiveType","activeSize","setActiveSize","infoVisible","setInfoVisible","className","LazyLoadImage","src","width","height","effect","alt","onClick","prev","type","map","el","handleActiveType","Math","round","viewBox","fill","xmlns","d","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","selectCategoryId","state","filter","categoryId","selectSortType","sort","categories","dispatch","useDispatch","useSelector","idx","id","setGategoryId","sortVariant","name","value","selectedSortVariant","isVisible","setIsVisible","handleActiveVariant","setSortVariant","searchQuery","useContext","SearchValue","data","setData","isLoading","setIsLoading","useEffect","category","order","includes","replace","fetch","then","res","json","catch","e","Error","window","scroll","normalizeValue","toLowerCase","skeleton","Array","_","pizzas","pizzaLength","length","vegPizzas","toLocaleLowerCase"],"sourceRoot":""}