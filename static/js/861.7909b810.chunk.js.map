{"version":3,"file":"static/js/861.7909b810.chunk.js","mappings":"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","sources":["components/PizzaItem/PizzaItem.jsx","components/Sceleton/Skeleton.jsx","components/Categories/Categories.jsx","components/Sort/Sort.jsx","components/PizzaList/PizzaList.jsx","pages/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { AiOutlinePlus, AiOutlineCheck } from 'react-icons/ai';\n\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport { useDispatch } from 'react-redux';\nimport { addItem } from 'redux/slices/cartSlice';\n\nconst typeNames = ['традициіне', 'тонке'];\n\nconst PizzaItem = ({ item }) => {\n  const dispatch = useDispatch();\n  const { id, imageUrl, title, types, sizes, price, ingredients } = item;\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(26);\n  const [infoVisible, setInfoVisible] = useState(false);\n  const [isAddedToCart, setIsAddedToCart] = useState(false);\n\n  const handleInfoVisible = () => setInfoVisible(prev => !prev);\n\n  const handleActiveType = el => setActiveType(el);\n  const handleActiveSize = idx => setActiveSize(idx);\n  const handleFullPrice = () => {\n    if (activeSize === 30) {\n      return Math.round(price * 1.2);\n    } else if (activeSize === 40) {\n      return Math.round(price * 1.35);\n    } else {\n      return price;\n    }\n  };\n\n  const handleCartAdd = () => {\n    const item = {\n      id,\n      title,\n      price: handleFullPrice(),\n      imageUrl,\n      type: activeType,\n      size: activeSize,\n      count: 1,\n    };\n\n    setIsAddedToCart(true);\n\n    setTimeout(() => {\n      setIsAddedToCart(false);\n    }, 2000);\n\n    dispatch(addItem(item));\n  };\n\n  return (\n    <div className=\"pizza-block-wrapper\">\n      <li className=\"pizza-block\">\n        <div className=\"pizza-block__image-wrapper\">\n          <LazyLoadImage\n            className=\"pizza-block__image\"\n            src={imageUrl}\n            width={260}\n            height={260}\n            effect=\"blur\"\n            alt=\"Pizza\"\n          />\n\n          <button\n            onClick={handleInfoVisible}\n            className=\"pizza-block__info\"\n            type=\"button\"\n          >\n            i\n          </button>\n\n          {infoVisible && (\n            <div className=\"pizza-block__overlay\">\n              <p className=\"pizza-block__overlay-desc\">Склад: {ingredients}</p>\n            </div>\n          )}\n        </div>\n\n        <h4 className=\"pizza-block__title\">{title}</h4>\n        <div className=\"pizza-block__selector\">\n          <ul>\n            {types.map(el => (\n              <li\n                key={el}\n                onClick={() => handleActiveType(el)}\n                className={activeType === el ? 'active' : ''}\n              >\n                {typeNames[el]}\n              </li>\n            ))}\n          </ul>\n          <ul>\n            {sizes.map(el => (\n              <li\n                key={el}\n                onClick={() => handleActiveSize(el)}\n                className={activeSize === el ? 'active' : ''}\n              >\n                {el} см\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"pizza-block__bottom\">\n          <div className=\"pizza-block__price\">{`${handleFullPrice()}₴`}</div>\n          {!isAddedToCart ? (\n            <button\n              onClick={handleCartAdd}\n              className=\"button button--outline button--add\"\n            >\n              <AiOutlinePlus size={20} />\n              <span>Додати</span>\n            </button>\n          ) : (\n            <button className=\"button--added \">\n              <AiOutlineCheck size={20} fill=\"white\" />\n              <span>Додано</span>\n            </button>\n          )}\n        </div>\n      </li>\n    </div>\n  );\n};\n\nexport default PizzaItem;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\n const Skeleton = () => (\n  <ContentLoader\n    className=\"pizza-block\"\n    speed={2}\n    width={280}\n    height={500}\n    viewBox=\"0 0 280 500\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n  >\n    <circle cx=\"134\" cy=\"136\" r=\"125\" />\n    <rect x=\"0\" y=\"279\" rx=\"10\" ry=\"10\" width=\"280\" height=\"23\" />\n    <rect x=\"0\" y=\"326\" rx=\"10\" ry=\"10\" width=\"280\" height=\"88\" />\n    <rect x=\"0\" y=\"436\" rx=\"10\" ry=\"10\" width=\"95\" height=\"30\" />\n    <rect x=\"125\" y=\"427\" rx=\"24\" ry=\"24\" width=\"152\" height=\"45\" />\n  </ContentLoader>\n);\n\nexport default Skeleton","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectCategoryId } from 'redux/selectors';\nimport { setGategoryId } from 'redux/slices/filterSlice';\n\nconst categories = ['Усі', \"М'ясні\", \"Без м'яса\", 'Гриль', 'Гострі'];\n\nconst Categories = () => {\n  const dispatch = useDispatch();\n  const categoryId = useSelector(selectCategoryId);\n\n  const handleCategory = id => dispatch(setGategoryId(id));\n  return (\n    <div className=\"categories\">\n      <ul>\n        {categories.map((el, idx) => (\n          <li\n            key={idx}\n            onClick={() => handleCategory(idx)}\n            className={categoryId === idx ? 'active' : ''}\n          >\n            {el}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setSortVariant } from 'redux/slices/filterSlice';\nimport { selectSortType } from 'redux/selectors';\n\nexport const sortVariantList = [\n  { name: 'популярності', value: 'rating' },\n  { name: 'ціні ⬇', value: '-price' },\n  { name: 'ціні ⬆', value: 'price' },\n  { name: 'алфавіту', value: 'title' },\n];\n\nconst Sort = () => {\n  const dispatch = useDispatch();\n  const sortRef = useRef();\n  const sortVariant = useSelector(selectSortType);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const handleSortVariant = value => dispatch(setSortVariant(value));\n  const toggleVisible = () => setIsVisible(prev => !prev);\n\n  const handleActiveVariant = obj => {\n    handleSortVariant(obj);\n    setIsVisible(prev => !prev);\n  };\n\n  const handleOutsideClick = event => {\n    const path = event.composedPath();\n\n    if (!path.includes(sortRef.current)) {\n      setIsVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n\n    return () => {\n      document.body.removeEventListener('click', handleOutsideClick);\n    };\n  }, []);\n\n  return (\n    <div ref={sortRef} className=\"sort\">\n      <div className=\"sort__label\">\n        <svg\n          className={isVisible ? 'sort__svg--active' : 'sort__svg'}\n          width=\"10\"\n          height=\"6\"\n          viewBox=\"0 0 10 6\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n            fill=\"#2C2C2C\"\n          />\n        </svg>\n        <b>Сортувати по:</b>\n        <span onClick={toggleVisible}>{sortVariant.name}</span>\n      </div>\n      {isVisible && (\n        <div className=\"sort__popup\">\n          <ul>\n            {sortVariantList.map((el, idx) => (\n              <li\n                key={idx}\n                onClick={() => handleActiveVariant(el)}\n                className={sortVariant.name === el.name ? 'active' : ''}\n              >\n                {el.name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Sort;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  selectCategoryId,\n  selectSortType,\n  selectSearchQuery,\n} from 'redux/selectors';\n\nimport axios from 'axios';\nimport PizzaItem from '../PizzaItem';\nimport Skeleton from '../Sceleton';\nimport Categories from '../Categories';\nimport Sort from '../Sort';\n\nconst categories = ['Усі', \"М'ясні\", \"Без м'яса\", 'Гриль', 'Гострі'];\n\nconst PizzaList = () => {\n  const categoryId = useSelector(selectCategoryId);\n  const sortVariant = useSelector(selectSortType);\n  const searchQuery = useSelector(selectSearchQuery);\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const order = sortVariant.value.includes('-') ? 'desc' : 'asc';\n    const sort = `sortBy=${sortVariant.value.replace('-', '')}&order=${order}`;\n\n    setIsLoading(true);\n\n    axios\n      .get(\n        `https://644fc5e0ba9f39c6ab6c0206.mockapi.io/items?${category}&${sort}`\n      )\n      .then(res => {\n        setData(res.data);\n        setIsLoading(false);\n      })\n      .catch(e => {\n        throw new Error(e);\n      });\n\n    window.scroll(0, 0);\n  }, [categoryId, sortVariant]);\n\n  const normalizeValue = searchQuery.toLowerCase();\n  const skeleton = [...new Array(6)].map((_, idx) => <Skeleton key={idx} />);\n  const pizzas = data\n    .filter(item => item.title.toLowerCase().includes(normalizeValue))\n    .map(item => <PizzaItem key={item.id} item={item} />);\n  const pizzaLength = pizzas.length;\n  const vegPizzas = `Піци ${categories[categoryId].toLocaleLowerCase()}`;\n\n  return (\n    <>\n      <div className=\"content__top\">\n        <Categories />\n        <Sort />\n      </div>\n      <h2 className=\"content__title\">\n        {categoryId === 2 ? vegPizzas : `${categories[categoryId]} піци`}\n      </h2>\n      <ul className=\"content__items\">{isLoading ? skeleton : pizzas}</ul>\n\n      {pizzaLength === 0 && (\n        <h1>Sorry, but there are no results for your query</h1>\n      )}\n    </>\n  );\n};\n\nexport default PizzaList;\n","import React from 'react';\nimport PizzaList from 'components/PizzaList';\n\nconst Home = () => {\n  return (\n    <>\n      <PizzaList />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["typeNames","item","dispatch","useDispatch","id","imageUrl","title","types","sizes","price","ingredients","useState","activeType","setActiveType","activeSize","setActiveSize","infoVisible","setInfoVisible","isAddedToCart","setIsAddedToCart","handleFullPrice","Math","round","className","LazyLoadImage","src","width","height","effect","alt","onClick","prev","type","map","el","handleActiveType","size","fill","count","setTimeout","addItem","speed","viewBox","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","categories","categoryId","useSelector","selectCategoryId","idx","setGategoryId","sortVariantList","name","value","sortRef","useRef","sortVariant","selectSortType","isVisible","setIsVisible","handleActiveVariant","obj","setSortVariant","handleOutsideClick","event","composedPath","includes","current","useEffect","document","body","addEventListener","removeEventListener","ref","xmlns","d","searchQuery","selectSearchQuery","data","setData","isLoading","setIsLoading","category","order","sort","replace","axios","then","res","catch","e","Error","window","scroll","normalizeValue","toLowerCase","skeleton","Array","_","pizzas","filter","pizzaLength","length","vegPizzas","toLocaleLowerCase"],"sourceRoot":""}