{"version":3,"file":"static/js/861.3decaf5a.chunk.js","mappings":"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","sources":["components/PizzaItem/PizzaItem.jsx","components/Sceleton/Skeleton.jsx","components/Categories/Categories.jsx","components/Sort/Sort.jsx","components/PizzaList/PizzaList.jsx","pages/Home.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nconst typeNames = ['тонкое', 'традиционное'];\nconst PizzaItem = ({ item }) => {\n  const { imageUrl, title, types, sizes, price, ingredients } = item;\n  const [activeType, setActiveType] = useState(0);\n  const [activeSize, setActiveSize] = useState(0);\n\n  const handleActiveType = el => setActiveType(el);\n  const handleActiveSize = idx => setActiveSize(idx);\n\n  return (\n    <div className=\"pizza-block-wrapper\">\n      <li className=\"pizza-block\">\n        <div className=\"pizza-block__image-wrapper\">\n          <LazyLoadImage\n            className=\"pizza-block__image\"\n            src={imageUrl}\n            width={260}\n            height={260}\n            effect=\"blur\"\n            alt=\"Pizza\"\n          />\n          <div className=\"pizza-block__overlay\">\n            <p className=\"pizza-block__overlay-desc\">Состав: {ingredients}</p>\n          </div>\n        </div>\n\n        <h4 className=\"pizza-block__title\">{title}</h4>\n        <div className=\"pizza-block__selector\">\n          <ul>\n            {types.map(el => (\n              <li\n                key={el}\n                onClick={() => handleActiveType(el)}\n                className={activeType === el ? 'active' : ''}\n              >\n                {typeNames[el]}\n              </li>\n            ))}\n          </ul>\n          <ul>\n            {sizes.map((el, idx) => (\n              <li\n                key={el}\n                onClick={() => handleActiveSize(idx)}\n                className={activeSize === idx ? 'active' : ''}\n              >\n                {el} см\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"pizza-block__bottom\">\n          <div className=\"pizza-block__price\">от {price} ₴</div>\n          <button className=\"button button--outline button--add\">\n            <svg\n              width=\"12\"\n              height=\"12\"\n              viewBox=\"0 0 12 12\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\n                fill=\"white\"\n              />\n            </svg>\n            <span>Добавить</span>\n            <i>0</i>\n          </button>\n        </div>\n      </li>\n    </div>\n  );\n};\n\nexport default PizzaItem;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\n const Skeleton = () => (\n  <ContentLoader\n    className=\"pizza-block\"\n    speed={2}\n    width={280}\n    height={500}\n    viewBox=\"0 0 280 500\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n  >\n    <circle cx=\"134\" cy=\"136\" r=\"125\" />\n    <rect x=\"0\" y=\"279\" rx=\"10\" ry=\"10\" width=\"280\" height=\"23\" />\n    <rect x=\"0\" y=\"326\" rx=\"10\" ry=\"10\" width=\"280\" height=\"88\" />\n    <rect x=\"0\" y=\"436\" rx=\"10\" ry=\"10\" width=\"95\" height=\"30\" />\n    <rect x=\"125\" y=\"427\" rx=\"24\" ry=\"24\" width=\"152\" height=\"45\" />\n  </ContentLoader>\n);\n\nexport default Skeleton","import React from 'react';\nconst categories = [\n  'Все',\n  'Мясные',\n  'Вегетарианская',\n  'Гриль',\n  'Острые',\n  'Закрытые',\n];\n\nconst Categories = ({ value, onChangeCategory }) => {\n  return (\n    <div className=\"categories\">\n      <ul>\n        {categories.map((el, idx) => (\n          <li\n            key={idx}\n            onClick={() => onChangeCategory(idx)}\n            className={value === idx ? 'active' : ''}\n          >\n            {el}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useState } from 'react';\n\nconst sortVariant = [\n  { name: 'популярности', value: 'rating' },\n  { name: 'цене ⬇', value: '-price' },\n  { name: 'цене ⬆', value: 'price' },\n  { name: 'алфавиту', value: 'title' },\n];\n\nconst Sort = ({ value, onChangeSort }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleVisible = () => setIsVisible(prev => !prev);\n  const handleActiveVariant = idx => {\n    onChangeSort(idx);\n    setIsVisible(prev => !prev);\n  };\n\n  return (\n    <div className=\"sort\">\n      <div className=\"sort__label\">\n        <svg\n          className={isVisible ? 'sort__svg--active' : 'sort__svg'}\n          width=\"10\"\n          height=\"6\"\n          viewBox=\"0 0 10 6\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n            fill=\"#2C2C2C\"\n          />\n        </svg>\n        <b>Сортировка по:</b>\n        <span onClick={toggleVisible}>{value.name}</span>\n      </div>\n      {isVisible && (\n        <div className=\"sort__popup\">\n          <ul>\n            {sortVariant.map((el, idx) => (\n              <li\n                key={idx}\n                onClick={() => handleActiveVariant(el)}\n                className={value.name === el.name ? 'active' : ''}\n              >\n                {el.name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Sort;\n","import React, { useState, useEffect } from 'react';\nimport PizzaItem from '../PizzaItem';\nimport Skeleton from '../Sceleton';\nimport Categories from '../Categories';\nimport Sort from '../Sort';\n\nconst PizzaList = () => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeCategory, setAactiveCategory] = useState(0);\n  const [selectedSortVariant, setSelectedSortVariant] = useState({\n    name: 'популярности',\n    value: 'rating',\n  });\n\n  useEffect(() => {\n    const category = activeCategory > 0 ? `category=${activeCategory}` : '';\n    const order = selectedSortVariant.value.includes('-') ? 'desc' : 'asc';\n    const sort = `sortBy=${selectedSortVariant.value.replace(\n      '-',\n      ''\n    )}&order=${order}`;\n\n    setIsLoading(true);\n    fetch(\n      `https://644fc5e0ba9f39c6ab6c0206.mockapi.io/items?${category}&${sort}`\n    )\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n        setData(res);\n        setIsLoading(false);\n      })\n      .catch(e => {\n        throw new Error(e);\n      });\n    window.scroll(0, 0);\n  }, [activeCategory, selectedSortVariant]);\n\n  return (\n    <>\n      <div className=\"content__top\">\n        <Categories\n          value={activeCategory}\n          onChangeCategory={id => setAactiveCategory(id)}\n        />\n        <Sort\n          value={selectedSortVariant}\n          onChangeSort={value => setSelectedSortVariant(value)}\n        />\n      </div>\n      <h2 className=\"content__title\">Все пиццы</h2>\n      <ul className=\"content__items\">\n        {isLoading\n          ? [...new Array(6)].map((_, idx) => <Skeleton key={idx} />)\n          : data.map(item => <PizzaItem key={item.id} item={item} />)}\n      </ul>\n    </>\n  );\n};\n\nexport default PizzaList;\n","import React from 'react';\nimport PizzaList from 'components/PizzaList';\n\nconst Home = () => {\n  return (\n    <>\n      <PizzaList />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["typeNames","item","imageUrl","title","types","sizes","price","ingredients","useState","activeType","setActiveType","activeSize","setActiveSize","className","LazyLoadImage","src","width","height","effect","alt","map","el","onClick","handleActiveType","idx","handleActiveSize","viewBox","fill","xmlns","d","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","categories","value","onChangeCategory","sortVariant","name","onChangeSort","isVisible","setIsVisible","prev","handleActiveVariant","data","setData","isLoading","setIsLoading","activeCategory","setAactiveCategory","selectedSortVariant","setSelectedSortVariant","useEffect","category","order","includes","sort","replace","fetch","then","res","json","catch","e","Error","window","scroll","id","Array","_"],"sourceRoot":""}